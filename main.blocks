<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="c{_xL)-d.e:RBmC=zM[]">nb_iot_waitTime</variable></variables><block type="pxt-on-start" id="B/=)DLsqL7ywzqzwIxO^" x="0" y="0"><statement name="HANDLER"><block type="variables_set" id="bD;BV3PPr[gNYw0M..1A"><field name="VAR" id="c{_xL)-d.e:RBmC=zM[]">nb_iot_waitTime</field><value name="VALUE"><shadow type="math_number" id="K2f@udT3Kz4iO((nW[{,"><field name="NUM">500</field></shadow></value><next><block type="typescript_statement" id="!rq)xPw?j[-)UraetefD"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum oma_object {" line1="    //% block=&quot;數字輸出&quot;" line2="    Digital_Output = 3201," line3="    //% block=&quot;模擬輸出&quot;" line4="    Analog_Output = 3203," line5="    //% block=&quot;通用傳感器&quot;" line6="    Generic_Sensor = 3300," line7="    //% block=&quot;照度&quot;" line8="    Illuminance = 3301," line9="    //% block=&quot;存在&quot;" line10="    Presence = 3302," line11="    //% block=&quot;溫度&quot;" line12="    Temperature = 3303," line13="    //% block=&quot; 濕度&quot;" line14="    Humidity = 3304," line15="    //% block=&quot;功率測量&quot;" line16="    Power_Measurement = 3305," line17="" line18="}" numlines="19"></mutation><next><block type="typescript_statement" id="3mw1d*x^Ysa7CW.,?X[s"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum oma_object_subid {" line1="    //% block=&quot;General&quot;" line2="    Three = 5550," line3="    //% block=&quot;two&quot;" line4="    Two = 3301," line5="    //% block=&quot;year&quot; " line6="    YEAR = 3340," line7="}" numlines="8"></mutation><next><block type="typescript_statement" id="fT^{)8$j_=nQy{UG@6[@"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum DHT11_Option {" line1="    //% block=&quot;溫度&quot; " line2="    Temperature = 0," line3="" line4="    //% block=&quot; 濕度&quot; " line5="    Humidity = 1," line6="}" numlines="7"></mutation><next><block type="typescript_statement" id="Hdh/})99fn`5H-#7|6o-"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace CMHK {" line1="    /**" line2="     * 向 NB-IoT 模塊請求 IMSI" line3="     */" line4="    //% blockId=&quot;nb_check_imsi&quot; block=&quot;請求 IMSI&quot;" line5="    //% group=&quot;NB-IoT&quot;" line6="    export function checkImsi(): void {" line7="        serial.redirect(" line8="            SerialPin.P12," line9="            SerialPin.P8," line10="            BaudRate.BaudRate115200" line11="        )" line12="        serial.writeLine(&quot;AT+CIMI&quot;)" line13="        basic.pause(nb_iot_waitTime)" line14="    }" line15="" line16="    /**" line17="     * 向 NB-IoT 模塊請求 IMEI " line18="     */" line19="    //% blockId=&quot;nb_check_imei&quot; block=&quot;請求 IMEI&quot;" line20="    //% group=&quot;NB-IoT&quot;" line21="    export function checkImei(): void {" line22="        serial.redirect(" line23="            SerialPin.P12," line24="            SerialPin.P8," line25="            BaudRate.BaudRate115200" line26="        )" line27="        serial.writeLine(&quot;AT+CGSN=1&quot;)" line28="        basic.pause(nb_iot_waitTime)" line29="    }" line30="" line31="" line32="    /**" line33="     * 檢查信號強度" line34="     */" line35="    //% blockId=&quot;nb_check_signal&quot; block=&quot;檢查信號強度&quot;" line36="    //% group=&quot;NB-IoT&quot;" line37="    export function checkSignal(): void {" line38="        serial.redirect(" line39="            SerialPin.P12," line40="            SerialPin.P8," line41="            BaudRate.BaudRate115200" line42="        )" line43="        serial.writeLine(&quot;AT+CSQ&quot;)" line44="        basic.pause(nb_iot_waitTime)" line45="    }" line46="" line47="    /**" line48="     * Request AT+MIPLCREATE" line49="     */" line50="    //% blockId=&quot;nb_miplcreate&quot; block=&quot;註冊設備&quot;" line51="    //% group=&quot;NB-IoT&quot;" line52="    export function nb_miplcreate(): void {" line53="        serial.redirect(" line54="            SerialPin.P12," line55="            SerialPin.P8," line56="            BaudRate.BaudRate115200" line57="        )" line58="        serial.writeLine(&quot;AT+MIPLCREATE&quot;)" line59="        basic.pause(nb_iot_waitTime)" line60="    }" line61="" line62="    /**" line63="     * NB-IoT 打開連接" line64="     * @param value describe value here, eg: 60" line65="     */" line66="    //% blockId=&quot;nb_open_connection&quot; block=&quot;NB-IoT 打開連接 %value 秒&quot;" line67="    //% group=&quot;NB-IoT&quot;" line68="    export function nb_open_connection(value: number): void {" line69="        serial.redirect(" line70="            SerialPin.P12," line71="            SerialPin.P8," line72="            BaudRate.BaudRate115200" line73="        )" line74="        serial.writeLine(&quot;AT+MIPLOPEN=0,&quot; + value)" line75="        basic.pause(5000)" line76="    }" line77="" line78="    /**" line79="     * NB-IoT 更新連接" line80="     * @param value describe value here, eg: 120" line81="     */" line82="    //% blockId=&quot;nb_update_connection&quot; block=&quot;NB-IoT 更新連接 %value 秒&quot;" line83="    //% group=&quot;NB-IoT&quot;" line84="    export function nb_update_connection(value: number): void {" line85="        serial.redirect(" line86="            SerialPin.P12," line87="            SerialPin.P8," line88="            BaudRate.BaudRate115200" line89="        )" line90="        serial.writeLine(&quot;AT+MIPLUPDATE=0,&quot; + value + &quot;, 0&quot;)" line91="        basic.pause(nb_iot_waitTime)" line92="    }" line93="" line94="    /**" line95="     * NB-IoT 關閉連接" line96="     */" line97="    //% blockId=&quot;nb_close_connection&quot; block=&quot;NB-IoT 關閉連接&quot;" line98="    //% group=&quot;NB-IoT&quot;" line99="    export function nb_close_connection(): void {" line100="        serial.redirect(" line101="            SerialPin.P12," line102="            SerialPin.P8," line103="            BaudRate.BaudRate115200" line104="        )" line105="        serial.writeLine(&quot;AT+MIPLCLOSE=0&quot;)" line106="        basic.pause(nb_iot_waitTime)" line107="    }" line108="" line109="    /**" line110="     * NB-IoT 軟件重啟" line111="     */" line112="    //% blockId=&quot;nb_soft_reset&quot; block=&quot;NB-IoT 軟件重啟&quot;" line113="    //% group=&quot;NB-IoT&quot;" line114="    export function nb_soft_reset(): void {" line115="        serial.redirect(" line116="            SerialPin.P12," line117="            SerialPin.P8," line118="            BaudRate.BaudRate115200" line119="        )" line120="        serial.writeLine(&quot;AT+CMRB&quot;)" line121="        basic.pause(5000)" line122="    }" line123="" line124="" line125="" line126="" line127="    /**" line128="     * NB-IoT 添加對象" line129="     * @param e describe parameter here" line130="     */" line131="" line132="    //% blockId=&quot;nb_add_obj&quot; block=&quot;NB-IoT 添加對象 %e &quot;" line133="    //% group=&quot;NB-IoT&quot;" line134="    export function nb_add_obj(e: oma_object): void {" line135="        serial.redirect(" line136="            SerialPin.P12," line137="            SerialPin.P8," line138="            BaudRate.BaudRate115200" line139="        )" line140="        serial.writeLine(&quot;AT+MIPLADDOBJ=0, &quot; + e + &quot;, 1, \&quot;1\&quot;, 0, 0&quot;)" line141="        basic.pause(nb_iot_waitTime)" line142="    }" line143="" line144="" line145="    /**" line146="     * NB-IoT 通知對象" line147="     * @param e describe parameter here" line148="     * @param value describe value here, eg: 5" line149="     */" line150="" line151="    //% blockId=&quot;nb_notify_obj&quot; block=&quot;NB-IoT 通知對象 %e %value&quot;" line152="    //% group=&quot;NB-IoT&quot;" line153="    export function nb_notify_obj(e: oma_object, value: number): void {" line154="        serial.redirect(" line155="            SerialPin.P12," line156="            SerialPin.P8," line157="            BaudRate.BaudRate115200" line158="        )" line159="        serial.writeLine(&quot;AT+MIPLNOTIFY=0,0,&quot; + e + &quot;,0,5700,4,4,&quot; + value + &quot;,0,0&quot;)" line160="        basic.pause(nb_iot_waitTime)" line161="    }" line162="" line163="" line164="" line165="" line166="" line167="    /**" line168="     * MQTT 設定 WiFi SSID" line169="     * @param value describe value here, eg: &quot;WIFI NAME&quot;" line170="     */" line171="" line172="    //% blockId=&quot;mqtt_wifi_ssid&quot; block=&quot;MQTT 設定 WiFi SSID: %value&quot;" line173="    //% group=&quot;MQTT&quot;" line174="    //% advanced=true" line175="    export function mqtt_wifi_ssid(value: string): void {" line176="        " line177="        serial.writeLine(&quot;AT+SSID=&quot; + value)" line178="    }" line179="" line180="    /**" line181="     * MQTT 設定 WiFi 密碼" line182="     * @param value describe value here, eg: &quot;WIFI Password&quot;" line183="     */" line184="" line185="    //% blockId=&quot;mqtt_wifi_pw&quot; block=&quot;MQTT 設定 WiFi 密碼: %value&quot;" line186="    //% group=&quot;MQTT&quot;" line187="    //% advanced=true" line188="    export function mqtt_wifi_pw(value: string): void {" line189="        " line190="        serial.writeLine(&quot;AT+PW=&quot; + value)" line191="    }" line192="" line193="    /**" line194="         * MQTT 設定產品ID" line195="         * @param value describe value here, eg: &quot;16001111&quot;" line196="         */" line197="" line198="    //% blockId=&quot;mqtt_set_pid&quot; block=&quot;MQTT 設定產品ID: %value&quot;" line199="    //% group=&quot;MQTT&quot;" line200="    //% advanced=true" line201="    export function mqtt_set_pid(value: string): void {" line202="        " line203="        serial.writeLine(&quot;AT+PID=&quot; + value)" line204="    }" line205="" line206="    /**" line207="         * MQTT 設定設備ID" line208="         * @param value describe value here, eg: &quot;161200005&quot;" line209="         */" line210="" line211="    //% blockId=&quot;mqtt_set_did&quot; block=&quot;MQTT 設定設備名稱: %value&quot;" line212="    //% group=&quot;MQTT&quot;" line213="    //% advanced=true" line214="    export function mqtt_set_did(value: string): void {" line215="        " line216="        serial.writeLine(&quot;AT+DID=&quot; + value)" line217="    }" line218="" line219="    /**" line220="          * MQTT 設定鑒權密碼" line221="          * @param value describe value here, eg: &quot;device_pw&quot;" line222="          */" line223="" line224="    //% blockId=&quot;mqtt_set_dpw&quot; block=&quot;MQTT 設定鑒權密碼: %value&quot;" line225="    //% group=&quot;MQTT&quot;" line226="    //% advanced=true" line227="    export function mqtt_set_dpw(value: string): void {" line228="        " line229="        serial.writeLine(&quot;AT+DPW=&quot; + value)" line230="    }" line231="" line232="    /**" line233="     * MQTT 檢視設備信息 " line234="     */" line235="" line236="    //% blockId=&quot;mqtt_check_info&quot; block=&quot;MQTT 檢視設備信息&quot;" line237="    //% group=&quot;MQTT&quot;" line238="    export function mqtt_check_info(): void {" line239="" line240="        mqtt_check_winfo()" line241="        basic.pause(100)" line242="        mqtt_check_gpid()" line243="        basic.pause(100)" line244="        mqtt_check_gdid()" line245="        basic.pause(100)" line246="        mqtt_check_gdpw()" line247="" line248="" line249="" line250="    }" line251="    " line252="    /**" line253="     * MQTT 檢視設備Wi-Fi信息 " line254="     */" line255="    //% blockId=&quot;mqtt_check_winfo&quot; block=&quot;MQTT 檢視設備Wi-Fi信息&quot;" line256="    //% group=&quot;MQTT&quot;" line257="    //% advanced=true" line258="    export function mqtt_check_winfo(): void {" line259="        " line260="        serial.writeLine(&quot;AT+WINFO?&quot;)  " line261="    }" line262="" line263="    /**" line264="     * MQTT 檢視產品ID" line265="     */" line266="    //% blockId=&quot;mqtt_check_gpid&quot; block=&quot;MQTT 檢視產品ID&quot;" line267="    //% group=&quot;MQTT&quot;" line268="    //% advanced=true" line269="    export function mqtt_check_gpid(): void {" line270="        " line271="        serial.writeLine(&quot;AT+GPID?&quot;)" line272="    }" line273="    /**" line274=" * MQTT 檢視設備ID" line275=" */" line276="    //% blockId=&quot;mqtt_check_gdid&quot; block=&quot;MQTT 檢視設備ID&quot;" line277="    //% group=&quot;MQTT&quot;" line278="    //% advanced=true" line279="    export function mqtt_check_gdid(): void {" line280="        " line281="        serial.writeLine(&quot;AT+GDID?&quot;)" line282="    }" line283="    /**" line284=" * MQTT 檢視設備鑒權密碼" line285=" */" line286="    //% blockId=&quot;mqtt_check_gdpw&quot; block=&quot;MQTT 檢視設備鑒權密碼&quot;" line287="    //% group=&quot;MQTT&quot;" line288="    //% advanced=true" line289="    export function mqtt_check_gdpw(): void {" line290="        " line291="        serial.writeLine(&quot;AT+GDPW?&quot;)" line292="    }" line293="" line294="" line295="" line296="    " line297="" line298="    /**" line299="     * MQTT 連接WiFi " line300="     * @param value describe value here, eg: 5" line301="     */" line302="" line303="    //% blockId=&quot;mqtt_wifi_conn&quot; block=&quot;MQTT 連接WiFi,嘗試次數 %value&quot;" line304="    //% group=&quot;MQTT&quot;" line305="    export function mqtt_wifi_conn(value: number): void {" line306="        " line307="        serial.writeLine(&quot;AT+CONN=&quot; + value)" line308="    }" line309="" line310="    /**" line311="     * MQTT 檢查WiFi連接" line312="     */" line313="" line314="    //% blockId=&quot;mqtt_check_wificonn&quot; block=&quot;MQTT 檢查WiFi連接&quot;" line315="    //% group=&quot;MQTT&quot;" line316="    //% advanced=true" line317="    export function mqtt_check_wificonn(): void {" line318="        " line319="        serial.writeLine(&quot;AT+CONN?&quot;)" line320="    }" line321="" line322="" line323="    /**" line324="     * MQTT 連接OneNET " line325="     * @param value describe value here, eg: 5" line326="     */" line327="" line328="    //% blockId=&quot;mqtt_onenet_conn&quot; block=&quot;MQTT 連接OneNET,嘗試次數 %value&quot;" line329="    //% group=&quot;MQTT&quot;" line330="    export function mqtt_onenet_conn(value: number): void {" line331="        " line332="        serial.writeLine(&quot;AT+MQTTCONN=&quot; + value)" line333="    }" line334="" line335="    /**" line336="     * MQTT 發送數據 " line337="     * @param topic 發送的主題名稱, eg: Temperature" line338="     * @param value 發送的數值, eg: 30.2" line339="     */" line340="" line341="    //% blockId=&quot;mqtt_send_data&quot; block=&quot;MQTT 發送主題 %topic 數值為 %value&quot;" line342="    //% group=&quot;MQTT&quot;" line343="    export function mqtt_send_data(topic: string, value: number): void {" line344="        " line345="        serial.writeLine(&quot;AT+SEND=&quot; + topic + &quot;,&quot; + value)" line346="    }" line347="" line348="" line349="    /**" line350="        * MQTT 檢查接收數據 " line351="        * 回傳由OneNeT平台下傳的訊息,如非下傳的訊息則回傳空白" line352="        * @param data Input String, eg: &quot;Recieve_String&quot;" line353="        */" line354="" line355="    //% blockId=&quot;mqtt_check_revcdata&quot; block=&quot;MQTT 檢查接收數據  %data&quot;" line356="    //% group=&quot;MQTT&quot;" line357="    export function mqtt_check_revcdata(data: string): string {" line358="        if (data.includes(&quot;[R]&quot;)) {" line359="            return data.substr(3, data.length)" line360="        }" line361="        return &quot;&quot;" line362="    }" line363="" line364="" line365="    /**" line366="        * MQTT 模塊重啟 " line367="        * 強制重新啟動MQTT模組" line368="        */" line369="" line370="    //% blockId=&quot;mqtt_restart&quot; block=&quot;MQTT 模塊重啟&quot;" line371="    //% group=&quot;MQTT&quot;" line372="    //% advanced=true" line373="    export function mqtt_restart(): void {" line374="        " line375="        serial.writeLine(&quot;AT+RES&quot; )" line376="    }" line377="" line378="    /**" line379="        * MQTT 模塊版本 " line380="        * 檢查 MQTT 模塊版本" line381="        */" line382="" line383="    //% blockId=&quot;mqtt_check_ver&quot; block=&quot;檢查 MQTT 模塊版本&quot;" line384="    //% group=&quot;MQTT&quot;" line385="    //% advanced=true" line386="    export function mqtt_check_ver(): void {" line387="        serial.redirect(" line388="            SerialPin.P12," line389="            SerialPin.P8," line390="            BaudRate.BaudRate115200" line391="        )" line392="        serial.writeLine(&quot;AT+VER?&quot;)" line393="    }" line394="" line395="" line396="    /**" line397="        * MQTT 檢查上線狀態 " line398="        */" line399="    //% blockId=&quot;mqtt_check_mconn&quot; block=&quot;檢查 MQTT 上線狀態&quot;" line400="    //% group=&quot;MQTT&quot;" line401="    //% advanced=true" line402="    export function mqtt_check_mconn(): void {" line403="        " line404="        serial.writeLine(&quot;AT+MQTT?&quot;)" line405="    }" line406="" line407="" line408="    /**" line409="           * 設定所有MQTT信息 " line410="           * @param ssid Wi-Fi名稱, eg: &quot;Wi-Fi_Name&quot;" line411="           * @param password Wi-Fi 密碼, eg: &quot;Wi-Fi_Password&quot;" line412="           * @param pid 產品ID, eg: &quot;16001111&quot;" line413="           * @param did 設備ID, eg: &quot;161200005&quot;" line414="           * @param dpw 鑒權密碼, eg: &quot;device_pw&quot;" line415="           * @param autoConnect 是否需要設定後馬上進行連接?" line416="           */" line417="    //% blockId=&quot;mqtt_master_setup&quot; block=&quot;設定MQTT信息|Wi-Fi SSID $ssid|Wi-Fi 密碼 $password|產品ID $pid|設備ID $did|鑒權密碼 $dpw|自動連接 $autoConnect&quot;" line418="    //% autoConnect.defl=true" line419="    //% group=&quot;MQTT&quot;" line420="    export function mqtt_master_setup(ssid: string, password: string, pid: string, did: string, dpw: string, autoConnect: boolean): void {" line421="        mqtt_wifi_ssid(ssid)" line422="        basic.pause(100)" line423="        mqtt_wifi_pw(password)" line424="        basic.pause(100)" line425="        mqtt_set_pid(pid)" line426="        basic.pause(100)" line427="        mqtt_set_did(did)" line428="        basic.pause(100)" line429="        mqtt_set_dpw(dpw)" line430="        basic.pause(100)" line431="        if(autoConnect){" line432="            mqtt_wifi_conn(5)" line433="            basic.pause(500)" line434="            mqtt_onenet_conn(5)" line435="            basic.pause(500)" line436="        }" line437="    }" line438="" line439="    /**" line440="       * OneNET 通訊起始設定" line441="       * 接收的緩衝空間預設為128,若更多或會使Micro:bit運作不正常" line442="       * 以及防止在每一句輸出前填寫空白符號" line443="       */" line444="" line445="    //% blockId=&quot;onenet_uart_begin&quot; block=&quot;OneNET 通訊起始設定&quot;" line446="    //% group=&quot;Serial&quot;" line447="    export function onenet_uart_begin(): void {" line448="        serial.redirect(" line449="            SerialPin.P12," line450="            SerialPin.P8," line451="            BaudRate.BaudRate115200" line452="        )" line453="        serial.setRxBufferSize(128)" line454="        serial.setWriteLinePadding(0)" line455="    }" line456="" line457="" line458="    /**" line459="       * 把串口轉接向OneNet通訊模組" line460="       * 接收的緩衝空間預設為128,若更多或會使Micro:bit運作不正常" line461="       * 以及防止在每一句輸出前填寫空白符號" line462="       */" line463="" line464="    //% blockId=&quot;onenet_uart_redirect&quot; block=&quot;把串口轉接向OneNet通訊模組&quot;" line465="    //% group=&quot;Serial&quot;" line466="    export function onenet_uart_redirect(): void {" line467="        serial.redirect(" line468="            SerialPin.P12," line469="            SerialPin.P8," line470="            BaudRate.BaudRate115200" line471="        )" line472="    }" line473="" line474="    let dht11Humidity = 0" line475="    let dht11Temperature = 0" line476="" line477="    /**" line478="     * 獲取DHT11數據" line479="     * @param option 選擇所需的數據, eg: DHT11_Option.Temperature" line480="     * @param option 選擇所連接的針腳, eg: DigitalPin.P14" line481="     */" line482="    //% blockId=&quot;sensor_dht11_get&quot; block=&quot;獲取DHT11數據 %option| 連接針腳 %pin&quot;" line483="    //% color=#ff7a4b" line484="    //% group=&quot;Sensor&quot;" line485="    export function sensor_dht11_get(option: DHT11_Option, pin: DigitalPin): number {" line486="        const DHT11_TIMEOUT = 100" line487="        const buffer = pins.createBuffer(40)" line488="        const data = [0, 0, 0, 0, 0]" line489="        let startTime = control.micros()" line490="" line491="        if (control.hardwareVersion().slice(0, 1) !== '1') { // V2" line492="            // // pins.digitalReadPin(DigitalPin.P0);" line493="            pins.digitalReadPin(DigitalPin.P1);" line494="            pins.digitalReadPin(DigitalPin.P2);" line495="            pins.digitalReadPin(DigitalPin.P3);" line496="            pins.digitalReadPin(DigitalPin.P4);" line497="            pins.digitalReadPin(DigitalPin.P10);" line498="" line499="            // 1.start signal" line500="            pins.digitalWritePin(pin, 0)" line501="            basic.pause(18)" line502="" line503="            // 2.pull up and wait 40us" line504="            pins.setPull(pin, PinPullMode.PullUp)" line505="            pins.digitalReadPin(pin)" line506="            control.waitMicros(40)" line507="" line508="            // 3.read data" line509="            startTime = control.micros()" line510="            while (pins.digitalReadPin(pin) === 0) {" line511="                if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line512="            }" line513="            startTime = control.micros()" line514="            while (pins.digitalReadPin(pin) === 1) {" line515="                if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line516="            }" line517="" line518="            for (let dataBits = 0; dataBits &lt; 40; dataBits++) {" line519="                startTime = control.micros()" line520="                while (pins.digitalReadPin(pin) === 1) {" line521="                    if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line522="                }" line523="                startTime = control.micros()" line524="                while (pins.digitalReadPin(pin) === 0) {" line525="                    if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line526="                }" line527="                control.waitMicros(28)" line528="                if (pins.digitalReadPin(pin) === 1) {" line529="                    buffer[dataBits] = 1" line530="                }" line531="            }" line532="        } else { // V1" line533="            // 1.start signal" line534="            pins.digitalWritePin(pin, 0)" line535="            basic.pause(18)" line536="" line537="            // 2.pull up and wait 40us" line538="            pins.setPull(pin, PinPullMode.PullUp)" line539="            pins.digitalReadPin(pin)" line540="            control.waitMicros(40)" line541="" line542="            // 3.read data" line543="            if (pins.digitalReadPin(pin) === 0) {" line544="                while (pins.digitalReadPin(pin) === 0);" line545="                while (pins.digitalReadPin(pin) === 1);" line546="" line547="                for (let dataBits2 = 0; dataBits2 &lt; 40; dataBits2++) {" line548="                    while (pins.digitalReadPin(pin) === 1);" line549="                    while (pins.digitalReadPin(pin) === 0);" line550="                    control.waitMicros(28)" line551="                    if (pins.digitalReadPin(pin) === 1) {" line552="                        buffer[dataBits2] = 1" line553="                    }" line554="                }" line555="            }" line556="        }" line557="" line558="        for (let i = 0; i &lt; 5; i++) {" line559="            for (let j = 0; j &lt; 8; j++) {" line560="                if (buffer[8 * i + j] === 1) {" line561="                    data[i] += 2 ** (7 - j)" line562="                }" line563="            }" line564="        }" line565="" line566="        if (((data[0] + data[1] + data[2] + data[3]) &amp; 0xff) === data[4]) {" line567="            dht11Humidity = data[0] + data[1] * 0.1" line568="            dht11Temperature = data[2] + data[3] * 0.1" line569="        }" line570="" line571="        switch (option) {" line572="            case DHT11_Option.Temperature:" line573="                return dht11Temperature" line574="            case DHT11_Option.Humidity:" line575="                return dht11Humidity" line576="        }" line577="    }" line578="" line579="    " line580="" line581="" line582="}" numlines="583"></mutation></block></next></block></next></block></next></block></next></block></statement></block></xml>