<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="o`ir^,SkUp8)jO=_w;D~">nb_iot_waitTime</variable></variables><block type="pxt-on-start" id="HU%dyB1**rX7V)%ngJTO" x="0" y="0"><statement name="HANDLER"><block type="variables_set" id="bKx7i.O8|b[4k7P9D~T["><field name="VAR" id="o`ir^,SkUp8)jO=_w;D~">nb_iot_waitTime</field><value name="VALUE"><shadow type="math_number" id="!M@17F8jgy=YQayx_L0*"><field name="NUM">500</field></shadow></value><next><block type="typescript_statement" id="ITrOj^C=jn-DB#%Ak(.n" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum oma_object {" line1="    //% block=&quot;數字輸出&quot;" line2="    Digital_Output = 3201," line3="    //% block=&quot;模擬輸出&quot;" line4="    Analog_Output = 3203," line5="    //% block=&quot;通用傳感器&quot;" line6="    Generic_Sensor = 3300," line7="    //% block=&quot;照度&quot;" line8="    Illuminance = 3301," line9="    //% block=&quot;存在&quot;" line10="    Presence = 3302," line11="    //% block=&quot;溫度&quot;" line12="    Temperature = 3303," line13="    //% block=&quot;功率測量&quot;" line14="    Power_Measurement = 3302," line15="" line16="}" numlines="17"></mutation><next><block type="typescript_statement" id="w1$08Z93zCG~:IIZmKf1" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum oma_object_subid {" line1="    //% block=&quot;General&quot;" line2="    Three = 5550," line3="    //% block=&quot;two&quot;" line4="    Two = 3301," line5="    //% block=&quot;year&quot; " line6="    YEAR = 3340," line7="}" numlines="8"></mutation><next><block type="typescript_statement" id="yZqdcOM3GXrwi$Z5ej$;" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum DHT11_Option {" line1="    //% block=&quot;溫度&quot; " line2="    Temperature = 0," line3="" line4="    //% block=&quot; 濕度&quot; " line5="    Humidity = 1," line6="}" numlines="7"></mutation><next><block type="typescript_statement" id="QrSo@CcM$Oq$`-FoI#~O" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace CMHK {" line1="    /**" line2="     * 向 NB-IoT 模塊請求 IMSI" line3="     */" line4="    //% blockId=&quot;nb_check_imsi&quot; block=&quot;請求 IMSI&quot;" line5="    //% group=&quot;NB-IoT&quot;" line6="    export function checkImsi(): void {" line7="        serial.redirect(" line8="            SerialPin.P12," line9="            SerialPin.P8," line10="            BaudRate.BaudRate9600" line11="        )" line12="        serial.writeLine(&quot;AT+CIMI&quot;)" line13="        basic.pause(nb_iot_waitTime)" line14="    }" line15="" line16="    /**" line17="     * 向 NB-IoT 模塊請求 IMEI " line18="     */" line19="    //% blockId=&quot;nb_check_imei&quot; block=&quot;請求 IMEI&quot;" line20="    //% group=&quot;NB-IoT&quot;" line21="    export function checkImei(): void {" line22="        serial.redirect(" line23="            SerialPin.P12," line24="            SerialPin.P8," line25="            BaudRate.BaudRate9600" line26="        )" line27="        serial.writeLine(&quot;AT+CGSN=1&quot;)" line28="        basic.pause(nb_iot_waitTime)" line29="    }" line30="" line31="" line32="    /**" line33="     * 檢查信號強度" line34="     */" line35="    //% blockId=&quot;nb_check_signal&quot; block=&quot;檢查信號強度&quot;" line36="    //% group=&quot;NB-IoT&quot;" line37="    export function checkSignal(): void {" line38="        serial.redirect(" line39="            SerialPin.P12," line40="            SerialPin.P8," line41="            BaudRate.BaudRate9600" line42="        )" line43="        serial.writeLine(&quot;AT+CSQ&quot;)" line44="        basic.pause(nb_iot_waitTime)" line45="    }" line46="" line47="    /**" line48="     * Request AT+MIPLCREATE" line49="     */" line50="    //% blockId=&quot;nb_miplcreate&quot; block=&quot;註冊設備&quot;" line51="    //% group=&quot;NB-IoT&quot;" line52="    export function nb_miplcreate(): void {" line53="        serial.redirect(" line54="            SerialPin.P12," line55="            SerialPin.P8," line56="            BaudRate.BaudRate9600" line57="        )" line58="        serial.writeLine(&quot;AT+MIPLCREATE&quot;)" line59="        basic.pause(nb_iot_waitTime)" line60="    }" line61="" line62="    /**" line63="     * NB-IoT 打開連接" line64="     * @param value describe value here, eg: 60" line65="     */" line66="    //% blockId=&quot;nb_open_conn&quot; block=&quot;NB-IoT 打開連接 %value 秒&quot;" line67="    //% group=&quot;NB-IoT&quot;" line68="    export function nb_open_connection(value: number): void {" line69="        serial.redirect(" line70="            SerialPin.P12," line71="            SerialPin.P8," line72="            BaudRate.BaudRate9600" line73="        )" line74="        serial.writeLine(&quot;AT+MIPLOPEN=0,&quot; + value)" line75="        basic.pause(5000)" line76="    }" line77="" line78="    /**" line79="     * NB-IoT 更新連接" line80="     * @param value describe value here, eg: 120" line81="     */" line82="    //% blockId=&quot;nb_open_conn&quot; block=&quot;NB-IoT 更新連接 %value 秒&quot;" line83="    //% group=&quot;NB-IoT&quot;" line84="    export function nb_update_connection(value: number): void {" line85="        serial.redirect(" line86="            SerialPin.P12," line87="            SerialPin.P8," line88="            BaudRate.BaudRate9600" line89="        )" line90="        serial.writeLine(&quot;AT+MIPLUPDATE=0,&quot; + value + &quot;, 0&quot;)" line91="        basic.pause(nb_iot_waitTime)" line92="    }" line93="" line94="    /**" line95="     * NB-IoT 關閉連接" line96="     */" line97="    //% blockId=&quot;nb_close_conn&quot; block=&quot;NB-IoT 關閉連接&quot;" line98="    //% group=&quot;NB-IoT&quot;" line99="    export function nb_close_connection(): void {" line100="        serial.redirect(" line101="            SerialPin.P12," line102="            SerialPin.P8," line103="            BaudRate.BaudRate9600" line104="        )" line105="        serial.writeLine(&quot;AT+MIPLCLOSE=0&quot;)" line106="        basic.pause(nb_iot_waitTime)" line107="    }" line108="" line109="    /**" line110="     * NB-IoT 軟件重啟" line111="     */" line112="    //% blockId=&quot;nb_oft_reset&quot; block=&quot;NB-IoT 軟件重啟&quot;" line113="    //% group=&quot;NB-IoT&quot;" line114="    export function nb_soft_reset(): void {" line115="        serial.redirect(" line116="            SerialPin.P12," line117="            SerialPin.P8," line118="            BaudRate.BaudRate9600" line119="        )" line120="        serial.writeLine(&quot;AT+CMRB&quot;)" line121="        basic.pause(5000)" line122="    }" line123="" line124="" line125="" line126="" line127="    /**" line128="     * NB-IoT 添加對象" line129="     * @param e describe parameter here" line130="     */" line131="" line132="    //% blockId=&quot;nb_add_obj&quot; block=&quot;NB-IoT 添加對象 %e &quot;" line133="    //% group=&quot;NB-IoT&quot;" line134="    export function nb_add_obj(e: oma_object): void {" line135="        serial.redirect(" line136="            SerialPin.P12," line137="            SerialPin.P8," line138="            BaudRate.BaudRate9600" line139="        )" line140="        serial.writeLine(&quot;AT+MIPLADDOBJ=0, &quot; + e + &quot;, 1, \&quot;1\&quot;, 0, 0&quot;)" line141="        basic.pause(nb_iot_waitTime)" line142="    }" line143="" line144="" line145="    /**" line146="     * NB-IoT 通知對象" line147="     * @param e describe parameter here" line148="     * @param value describe value here, eg: 5" line149="     */" line150="" line151="    //% blockId=&quot;nb_notify_obj&quot; block=&quot;NB-IoT 通知對象 %e %value&quot;" line152="    //% group=&quot;NB-IoT&quot;" line153="    export function nb_notify_obj(e: oma_object, value: number): void {" line154="        serial.redirect(" line155="            SerialPin.P12," line156="            SerialPin.P8," line157="            BaudRate.BaudRate9600" line158="        )" line159="        serial.writeLine(&quot;AT+MIPLNOTIFY=0,0,&quot; + e + &quot;,0,5700,4,4,&quot; + value + &quot;,0,0&quot;)" line160="        basic.pause(nb_iot_waitTime)" line161="    }" line162="" line163="" line164="" line165="" line166="" line167="    /**" line168="     * MQTT 設定 WiFi SSID" line169="     * @param value describe value here, eg: &quot;WIFI NAME&quot;" line170="     */" line171="" line172="    //% blockId=&quot;mqtt_wifi_ssid&quot; block=&quot;MQTT 設定 WiFi SSID: %value&quot;" line173="    //% group=&quot;MQTT&quot;" line174="    //% advanced=true" line175="    export function mqtt_wifi_ssid(value: string): void {" line176="        serial.redirect(" line177="            SerialPin.P12," line178="            SerialPin.P8," line179="            BaudRate.BaudRate9600" line180="        )" line181="        serial.writeLine(&quot;AT+SSID=&quot; + value)" line182="    }" line183="" line184="    /**" line185="     * MQTT 設定 WiFi 密碼" line186="     * @param value describe value here, eg: &quot;WIFI Password&quot;" line187="     */" line188="" line189="    //% blockId=&quot;mqtt_wifi_pw&quot; block=&quot;MQTT 設定 WiFi 密碼: %value&quot;" line190="    //% group=&quot;MQTT&quot;" line191="    //% advanced=true" line192="    export function mqtt_wifi_pw(value: string): void {" line193="        serial.redirect(" line194="            SerialPin.P12," line195="            SerialPin.P8," line196="            BaudRate.BaudRate9600" line197="        )" line198="        serial.writeLine(&quot;AT+PW=&quot; + value)" line199="    }" line200="" line201="    /**" line202="         * MQTT 設定產品ID" line203="         * @param value describe value here, eg: &quot;16001111&quot;" line204="         */" line205="" line206="    //% blockId=&quot;mqtt_set_pid&quot; block=&quot;MQTT 設定產品ID: %value&quot;" line207="    //% group=&quot;MQTT&quot;" line208="    //% advanced=true" line209="    export function mqtt_set_pid(value: number): void {" line210="        serial.redirect(" line211="            SerialPin.P12," line212="            SerialPin.P8," line213="            BaudRate.BaudRate9600" line214="        )" line215="        serial.writeLine(&quot;AT+PID=&quot; + value)" line216="    }" line217="" line218="    /**" line219="         * MQTT 設定設備ID" line220="         * @param value describe value here, eg: &quot;161200005&quot;" line221="         */" line222="" line223="    //% blockId=&quot;mqtt_set_did&quot; block=&quot;MQTT 設定設備ID: %value&quot;" line224="    //% group=&quot;MQTT&quot;" line225="    //% advanced=true" line226="    export function mqtt_set_did(value: number): void {" line227="        serial.redirect(" line228="            SerialPin.P12," line229="            SerialPin.P8," line230="            BaudRate.BaudRate9600" line231="        )" line232="        serial.writeLine(&quot;AT+DID=&quot; + value)" line233="    }" line234="" line235="    /**" line236="          * MQTT 設定鑒權密碼" line237="          * @param value describe value here, eg: &quot;device_pw&quot;" line238="          */" line239="" line240="    //% blockId=&quot;mqtt_set_dpw&quot; block=&quot;MQTT 設定鑒權密碼: %value&quot;" line241="    //% group=&quot;MQTT&quot;" line242="    //% advanced=true" line243="    export function mqtt_set_dpw(value: string): void {" line244="        serial.redirect(" line245="            SerialPin.P12," line246="            SerialPin.P8," line247="            BaudRate.BaudRate9600" line248="        )" line249="        serial.writeLine(&quot;AT+DPW=&quot; + value)" line250="    }" line251="" line252="    /**" line253="     * MQTT 檢視設備信息 " line254="     */" line255="" line256="    //% blockId=&quot;mqtt_check_info&quot; block=&quot;MQTT 檢視設備信息&quot;" line257="    //% group=&quot;MQTT&quot;" line258="    export function mqtt_check_info(): void {" line259="" line260="        mqtt_check_winfo()" line261="        basic.pause(100)" line262="        mqtt_check_gpid()" line263="        basic.pause(100)" line264="        mqtt_check_gdid()" line265="        basic.pause(100)" line266="        mqtt_check_gdpw()" line267="" line268="" line269="" line270="    }" line271="    " line272="    /**" line273="     * MQTT 檢視設備Wi-Fi信息 " line274="     */" line275="    //% blockId=&quot;mqtt_check_winfo&quot; block=&quot;MQTT 檢視設備Wi-Fi信息&quot;" line276="    //% group=&quot;MQTT&quot;" line277="    //% advanced=true" line278="    export function mqtt_check_winfo(): void {" line279="        serial.redirect(" line280="            SerialPin.P12," line281="            SerialPin.P8," line282="            BaudRate.BaudRate9600" line283="        )" line284="        serial.writeLine(&quot;AT+WINFO?&quot;)  " line285="    }" line286="" line287="    /**" line288="     * MQTT 檢視產品ID" line289="     */" line290="    //% blockId=&quot;mqtt_check_gpid&quot; block=&quot;MQTT 檢視產品ID&quot;" line291="    //% group=&quot;MQTT&quot;" line292="    //% advanced=true" line293="    export function mqtt_check_gpid(): void {" line294="        serial.redirect(" line295="            SerialPin.P12," line296="            SerialPin.P8," line297="            BaudRate.BaudRate9600" line298="        )" line299="        serial.writeLine(&quot;AT+GPID?&quot;)" line300="    }" line301="    /**" line302=" * MQTT 檢視設備ID" line303=" */" line304="    //% blockId=&quot;mqtt_check_gdid&quot; block=&quot;MQTT 檢視設備ID&quot;" line305="    //% group=&quot;MQTT&quot;" line306="    //% advanced=true" line307="    export function mqtt_check_gdid(): void {" line308="        serial.redirect(" line309="            SerialPin.P12," line310="            SerialPin.P8," line311="            BaudRate.BaudRate9600" line312="        )" line313="        serial.writeLine(&quot;AT+GDID?&quot;)" line314="    }" line315="    /**" line316=" * MQTT 檢視設備鑒權密碼" line317=" */" line318="    //% blockId=&quot;mqtt_check_gdpw&quot; block=&quot;MQTT 檢視設備鑒權密碼&quot;" line319="    //% group=&quot;MQTT&quot;" line320="    //% advanced=true" line321="    export function mqtt_check_gdpw(): void {" line322="        serial.redirect(" line323="            SerialPin.P12," line324="            SerialPin.P8," line325="            BaudRate.BaudRate9600" line326="        )" line327="        serial.writeLine(&quot;AT+GDPW?&quot;)" line328="    }" line329="" line330="" line331="" line332="    " line333="" line334="    /**" line335="     * MQTT 連接WiFi " line336="     * @param value describe value here, eg: 5" line337="     */" line338="" line339="    //% blockId=&quot;mqtt_wifi_conn&quot; block=&quot;MQTT 連接WiFi,嘗試次數 %value&quot;" line340="    //% group=&quot;MQTT&quot;" line341="    export function mqtt_wifi_conn(value: number): void {" line342="        serial.redirect(" line343="            SerialPin.P12," line344="            SerialPin.P8," line345="            BaudRate.BaudRate9600" line346="        )" line347="        serial.writeLine(&quot;AT+CONN=&quot; + value)" line348="    }" line349="" line350="    /**" line351="     * MQTT 檢查WiFi連接" line352="     */" line353="" line354="    //% blockId=&quot;mqtt_check_wificonn&quot; block=&quot;MQTT 檢查WiFi連接&quot;" line355="    //% group=&quot;MQTT&quot;" line356="    //% advanced=true" line357="    export function mqtt_check_wificonn(): void {" line358="        serial.redirect(" line359="            SerialPin.P12," line360="            SerialPin.P8," line361="            BaudRate.BaudRate9600" line362="        )" line363="        serial.writeLine(&quot;AT+CONN?&quot;)" line364="    }" line365="" line366="" line367="    /**" line368="     * MQTT 連接OneNET " line369="     * @param value describe value here, eg: 5" line370="     */" line371="" line372="    //% blockId=&quot;mqtt_onenet_conn&quot; block=&quot;MQTT 連接OneNET,嘗試次數 %value&quot;" line373="    //% group=&quot;MQTT&quot;" line374="    export function mqtt_onenet_conn(value: number): void {" line375="        serial.redirect(" line376="            SerialPin.P12," line377="            SerialPin.P8," line378="            BaudRate.BaudRate9600" line379="        )" line380="        serial.writeLine(&quot;AT+MQTTCONN=&quot; + value)" line381="    }" line382="" line383="    /**" line384="     * MQTT 發送數據 " line385="     * @param topic 發送的主題名稱, eg: Temperature" line386="     * @param value 發送的數值, eg: 30.2" line387="     */" line388="" line389="    //% blockId=&quot;mqtt_send_data&quot; block=&quot;MQTT 發送主題 %topic 數值為 %value&quot;" line390="    //% group=&quot;MQTT&quot;" line391="    export function mqtt_send_data(topic: string, value: number): void {" line392="        serial.redirect(" line393="            SerialPin.P12," line394="            SerialPin.P8," line395="            BaudRate.BaudRate9600" line396="        )" line397="        serial.writeLine(&quot;AT+SEND=&quot; + topic + &quot;,&quot; + value)" line398="    }" line399="" line400="" line401="    /**" line402="        * MQTT 檢查接收數據 " line403="        * 回傳由OneNeT平台下傳的訊息,如非下傳的訊息則回傳空白" line404="        * @param data Input String, eg: &quot;Recieve_String&quot;" line405="        */" line406="" line407="    //% blockId=&quot;mqtt_check_revcdata&quot; block=&quot;MQTT 檢查接收數據  %data&quot;" line408="    //% group=&quot;MQTT&quot;" line409="    export function mqtt_check_revcdata(data: string): string {" line410="        if (data.includes(&quot;[R]&quot;)) {" line411="            return data.substr(3, data.length)" line412="        }" line413="        return &quot;&quot;" line414="    }" line415="" line416="" line417="    /**" line418="        * MQTT 模塊重啟 " line419="        * 強制重新啟動MQTT模組" line420="        */" line421="" line422="    //% blockId=&quot;mqtt_restart&quot; block=&quot;MQTT 模塊重啟&quot;" line423="    //% group=&quot;MQTT&quot;" line424="    //% advanced=true" line425="    export function mqtt_restart(): void {" line426="        serial.redirect(" line427="            SerialPin.P12," line428="            SerialPin.P8," line429="            BaudRate.BaudRate9600" line430="        )" line431="        serial.writeLine(&quot;AT+RES&quot; )" line432="    }" line433="" line434="    /**" line435="        * MQTT 模塊版本 " line436="        * 檢查 MQTT 模塊版本" line437="        */" line438="" line439="    //% blockId=&quot;mqtt_check_ver&quot; block=&quot;檢查 MQTT 模塊版本&quot;" line440="    //% group=&quot;MQTT&quot;" line441="    //% advanced=true" line442="    export function mqtt_check_ver(): void {" line443="        serial.redirect(" line444="            SerialPin.P12," line445="            SerialPin.P8," line446="            BaudRate.BaudRate9600" line447="        )" line448="        serial.writeLine(&quot;AT+VER?&quot;)" line449="    }" line450="" line451="" line452="    /**" line453="        * MQTT 檢查上線狀態 " line454="        */" line455="    //% blockId=&quot;mqtt_check_mconn&quot; block=&quot;檢查 MQTT 上線狀態&quot;" line456="    //% group=&quot;MQTT&quot;" line457="    //% advanced=true" line458="    export function mqtt_check_mconn(): void {" line459="        serial.redirect(" line460="            SerialPin.P12," line461="            SerialPin.P8," line462="            BaudRate.BaudRate9600" line463="        )" line464="        serial.writeLine(&quot;AT+MQTT?&quot;)" line465="    }" line466="" line467="" line468="    /**" line469="           * 設定所有MQTT信息 " line470="           * @param ssid Wi-Fi名稱, eg: &quot;Wi-Fi_Name&quot;" line471="           * @param password Wi-Fi 密碼, eg: &quot;Wi-Fi_Password&quot;" line472="           * @param pid 產品ID, eg: &quot;16001111&quot;" line473="           * @param did 設備ID, eg: &quot;161200005&quot;" line474="           * @param dpw 鑒權密碼, eg: &quot;device_pw&quot;" line475="           * @param autoConnect 是否需要設定後馬上進行連接?" line476="           */" line477="    //% blockId=&quot;mqtt_master_setup&quot; block=&quot;設定MQTT信息|Wi-Fi SSID $ssid|Wi-Fi 密碼 $password|產品ID $pid|設備ID $did|鑒權密碼 $dpw|自動連接 $autoConnect&quot;" line478="    //% autoConnect.defl=true" line479="    export function mqtt_master_setup(ssid: string, password: string, pid: number, did: number, dpw: string, autoConnect: boolean): void {" line480="        mqtt_wifi_ssid(ssid)" line481="        basic.pause(100)" line482="        mqtt_wifi_pw(password)" line483="        basic.pause(100)" line484="        mqtt_set_pid(pid)" line485="        basic.pause(100)" line486="        mqtt_set_did(did)" line487="        basic.pause(100)" line488="        mqtt_set_dpw(dpw)" line489="        basic.pause(100)" line490="        if(autoConnect){" line491="            mqtt_wifi_conn(5)" line492="            basic.pause(500)" line493="            mqtt_onenet_conn(5)" line494="            basic.pause(500)" line495="        }" line496="    }" line497="" line498="    /**" line499="       * OneNET 通訊起始設定" line500="       * 接收的緩衝空間預設為128,若更多或會使Micro:bit運作不正常" line501="       * 以及防止在每一句輸出前填寫空白符號" line502="       */" line503="" line504="    //% blockId=&quot;onenet_uart_begin&quot; block=&quot;OneNET 通訊起始設定&quot;" line505="    //% group=&quot;Serial&quot;" line506="    export function onenet_uart_begin(): void {" line507="        serial.redirect(" line508="            SerialPin.P12," line509="            SerialPin.P8," line510="            BaudRate.BaudRate9600" line511="        )" line512="        serial.setRxBufferSize(128)" line513="        serial.setWriteLinePadding(0)" line514="    }" line515="" line516="" line517="    /**" line518="       * 把串口轉接向OneNet通訊模組" line519="       * 接收的緩衝空間預設為128,若更多或會使Micro:bit運作不正常" line520="       * 以及防止在每一句輸出前填寫空白符號" line521="       */" line522="" line523="    //% blockId=&quot;onenet_uart_redirect&quot; block=&quot;把串口轉接向OneNet通訊模組&quot;" line524="    //% group=&quot;Serial&quot;" line525="    export function onenet_uart_redirect(): void {" line526="        serial.redirect(" line527="            SerialPin.P12," line528="            SerialPin.P8," line529="            BaudRate.BaudRate9600" line530="        )" line531="    }" line532="" line533="    let dht11Humidity = 0" line534="    let dht11Temperature = 0" line535="" line536="    /**" line537="     * 獲取DHT11數據" line538="     * @param option 選擇所需的數據, eg: DHT11_Option.Temperature" line539="     * @param option 選擇所連接的針腳, eg: DigitalPin.P14" line540="     */" line541="    //% blockId=&quot;sensor_dht11_get&quot; block=&quot;獲取DHT11數據 %option| 連接針腳 %pin&quot;" line542="    //% color=#ff7a4b" line543="    //% group=&quot;Sensor&quot;" line544="    export function sensor_dht11_get(option: DHT11_Option, pin: DigitalPin): number {" line545="        const DHT11_TIMEOUT = 100" line546="        const buffer = pins.createBuffer(40)" line547="        const data = [0, 0, 0, 0, 0]" line548="        let startTime = control.micros()" line549="" line550="        if (control.hardwareVersion().slice(0, 1) !== '1') { // V2" line551="            // // pins.digitalReadPin(DigitalPin.P0);" line552="            pins.digitalReadPin(DigitalPin.P1);" line553="            pins.digitalReadPin(DigitalPin.P2);" line554="            pins.digitalReadPin(DigitalPin.P3);" line555="            pins.digitalReadPin(DigitalPin.P4);" line556="            pins.digitalReadPin(DigitalPin.P10);" line557="" line558="            // 1.start signal" line559="            pins.digitalWritePin(pin, 0)" line560="            basic.pause(18)" line561="" line562="            // 2.pull up and wait 40us" line563="            pins.setPull(pin, PinPullMode.PullUp)" line564="            pins.digitalReadPin(pin)" line565="            control.waitMicros(40)" line566="" line567="            // 3.read data" line568="            startTime = control.micros()" line569="            while (pins.digitalReadPin(pin) === 0) {" line570="                if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line571="            }" line572="            startTime = control.micros()" line573="            while (pins.digitalReadPin(pin) === 1) {" line574="                if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line575="            }" line576="" line577="            for (let dataBits = 0; dataBits &lt; 40; dataBits++) {" line578="                startTime = control.micros()" line579="                while (pins.digitalReadPin(pin) === 1) {" line580="                    if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line581="                }" line582="                startTime = control.micros()" line583="                while (pins.digitalReadPin(pin) === 0) {" line584="                    if (control.micros() - startTime &gt; DHT11_TIMEOUT) break" line585="                }" line586="                control.waitMicros(28)" line587="                if (pins.digitalReadPin(pin) === 1) {" line588="                    buffer[dataBits] = 1" line589="                }" line590="            }" line591="        } else { // V1" line592="            // 1.start signal" line593="            pins.digitalWritePin(pin, 0)" line594="            basic.pause(18)" line595="" line596="            // 2.pull up and wait 40us" line597="            pins.setPull(pin, PinPullMode.PullUp)" line598="            pins.digitalReadPin(pin)" line599="            control.waitMicros(40)" line600="" line601="            // 3.read data" line602="            if (pins.digitalReadPin(pin) === 0) {" line603="                while (pins.digitalReadPin(pin) === 0);" line604="                while (pins.digitalReadPin(pin) === 1);" line605="" line606="                for (let dataBits2 = 0; dataBits2 &lt; 40; dataBits2++) {" line607="                    while (pins.digitalReadPin(pin) === 1);" line608="                    while (pins.digitalReadPin(pin) === 0);" line609="                    control.waitMicros(28)" line610="                    if (pins.digitalReadPin(pin) === 1) {" line611="                        buffer[dataBits2] = 1" line612="                    }" line613="                }" line614="            }" line615="        }" line616="" line617="        for (let i = 0; i &lt; 5; i++) {" line618="            for (let j = 0; j &lt; 8; j++) {" line619="                if (buffer[8 * i + j] === 1) {" line620="                    data[i] += 2 ** (7 - j)" line621="                }" line622="            }" line623="        }" line624="" line625="        if (((data[0] + data[1] + data[2] + data[3]) &amp; 0xff) === data[4]) {" line626="            dht11Humidity = data[0] + data[1] * 0.1" line627="            dht11Temperature = data[2] + data[3] * 0.1" line628="        }" line629="" line630="        switch (option) {" line631="            case DHT11_Option.Temperature:" line632="                return dht11Temperature" line633="            case DHT11_Option.Humidity:" line634="                return dht11Humidity" line635="        }" line636="    }" line637="" line638="    " line639="" line640="" line641="}" numlines="642"></mutation></block></next></block></next></block></next></block></next></block></statement></block></xml>